stages:
    - build
    - upload
    - deploy
variables:
    # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#docker-in-docker-with-tls-enabled-in-kubernetes
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"

docker-build:
  # Use the official docker image.
    image: docker:latest
    stage: build
    services:
        - name: docker:dind
          command: ["--mtu=1440"]
    before_script:
        - until docker info; do sleep 1; done
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    script:
        - |
            if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
                ver=$(sed -n 's/^ *version *= *"\([^"]*\)".*/\1/p' Cargo.toml)
                git_tag=$CI_COMMIT_SHORT_SHA
                tag=":${ver}.${git_tag}"
                echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = $tag"
            else
                tag=":$CI_COMMIT_REF_SLUG"
                echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
            fi
        - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
        - docker push "$CI_REGISTRY_IMAGE${tag}"
    rules:
        - if: $CI_COMMIT_BRANCH
          exists:
            - Dockerfile

upload-image:
    image: docker:latest
    stage: upload
    services:
        - name: docker:dind
          command: ["--mtu=1440"]
    before_script:
        - until docker info; do sleep 1; done
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
        - docker login -u "$HARBOR_USER" -p "$HARBOR_PASSWORD" $HARBOR_REGISTRY
    script:
        - |
            if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
                ver=$(sed -n 's/^ *version *= *"\([^"]*\)".*/\1/p' Cargo.toml)
                git_tag=$CI_COMMIT_SHORT_SHA
                tag=":${ver}.${git_tag}"
                echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = $tag"
            else
                tag=":$CI_COMMIT_REF_SLUG"
                echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
            fi
        - docker pull "$CI_REGISTRY_IMAGE${tag}"
        - docker tag "$CI_REGISTRY_IMAGE${tag}" "$HARBOR_REGISTRY/$HARBOR_PROJECT/$CI_REGISTRY_IMAGE${tag}"
        - docker push "$HARBOR_REGISTRY/$HARBOR_PROJECT/$CI_REGISTRY_IMAGE${tag}"
    rules:
        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy-project:
    image: alpine:latest
    stage: deploy
    before_script:
        - apk add jq
        - apk add curl
    script:
        - |
            if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
                ver=$(sed -n 's/^ *version *= *"\([^"]*\)".*/\1/p' Cargo.toml)
                git_tag=$CI_COMMIT_SHORT_SHA
                tag=":${ver}.${git_tag}"
                echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = $tag"
            else
                tag=":$CI_COMMIT_REF_SLUG"
                echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
            fi
        - export IMAGE_URL="${HARBOR_PROJECT}/${CI_REGISTRY_IMAGE}${tag}"
        - export DEPLOY_VER="${ver}-${git_tag}"
        - sh scripts/deploy_project.sh
    rules:
        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

